{
    "cells": [
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "## Part 1: Conditional Statements\n",
                "\n",
                "#### 🚦 Introduction to Conditional Statements\n",
                "\n",
                "Conditional statements are an essential aspect of programming that allow us to make decisions based on certain conditions. In Python, conditional statements are implemented using the keywords \"if,\" \"else,\" and \"elif\" (short for \"else if\").\n",
                "\n",
                "The basic structure of an if statement in Python is as follows:\n",
                "\n",
                "```python\n",
                "if condition:\n",
                "    # Code to be executed if the condition is True\n",
                "```\n",
                "\n",
                "The condition is an expression that evaluates to either True or False. If the condition is True, the code block indented under the if statement is executed. If the condition is False, the code block is skipped, and the program moves on to the next statement.\n",
                "\n",
                "#### 🧑🏽‍💻 You do\n",
                "**Check if a number is positive**\n",
                "\n",
                "1. Create a variable named `num` and assign a number to it.\n",
                "2. Use an if statement to check if the number is greater than 0.\n",
                "3. If the condition is True, print \"The number is positive.\"\n",
                "4. If the condition is False, print \"The number is not positive.\"\n",
                "\n",
                "# Your Code Here ❌\n",
                "num = 10\n",
                "if num > 0:\n",
                "    print(\"The number is positive.\")\n",
                "else:\n",
                "    print(\"The number is not positive.\")\n"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "#### 🚀 Implementing Basic Decision Making\n",
                "\n",
                "Let's look at an example to understand how basic decision making works using conditional statements:\n",
                "\n",
                "```python\n",
                "age = int(input(\"Enter your age: \"))\n",
                "\n",
                "if age >= 18:\n",
                "    print(\"You are eligible to vote.\")\n",
                "else:\n",
                "    print(\"You are not eligible to vote.\")\n",
                "```\n",
                "\n",
                "In this example, the program asks the user to enter their age using the `input()` function. The entered value is then converted to an integer using the `int()` function and stored in the `age` variable.\n",
                "\n",
                "The if statement checks if the `age` is greater than or equal to 18. If it is, the program prints \"You are eligible to vote.\" Otherwise, it executes the code under the else statement and prints \"You are not eligible to vote.\"\n",
                "\n",
                "#### 🧑🏽‍💻 You do\n",
                "**Check if a number is even or odd**\n",
                "\n",
                "1. Create a variable named `num` and assign a number to it.\n",
                "2. Use an if statement to check if the number is divisible by 2.\n",
                "3. If the condition is True, print \"The number is even.\"\n",
                "4. If the condition is False, print \"The number is odd.\"\n",
                "\n",
                "# Your Code Here ❌\n",
                "num = 7\n",
                "if num % 2 == 0:\n",
                "    print(\"The number is even.\")\n",
                "else:\n",
                "    print(\"The number is odd.\")\n"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "#### 🚥 Enhancing Decision Making with Logical Operators\n",
                "\n",
                "Python provides logical operators such as \"and,\" \"or,\" and \"not\" to enhance decision making with conditional statements.\n",
                "\n",
                "Here's an example that demonstrates the usage of logical operators:\n",
                "\n",
                "```python\n",
                "num = int(input(\"Enter a number: \"))\n",
                "\n",
                "if num > 0 and num % 2 == 0:\n",
                "    print(\"The number is positive and even.\")\n",
                "elif num > 0 and num % 2 != 0:\n",
                "    print(\"The number is positive and odd.\")\n",
                "elif num < 0:\n",
                "    print(\"The number is negative.\")\n",
                "else:\n",
                "    print(\"The number is zero.\")\n",
                "```\n",
                "\n",
                "In this example, the program asks the user to enter a number. Based on the entered number, the program uses multiple conditions (if, elif, else) to determine its characteristics. The logical operators \"and\" and \"or\" are used to combine conditions.\n",
                "\n",
                "#### 🧑🏽‍💻 You do\n",
                "**Check if a number is positive and divisible by 3**\n",
                "\n",
                "1. Create a variable named `num` and assign a number to it.\n",
                "2. Use an if statement to check if the number is greater than 0 and divisible by 3.\n",
                "3. If the condition is True, print \"The number is positive and divisible by 3.\"\n",
                "4. If the condition is False, print \"The number is either not positive or not divisible by 3.\"\n",
                "\n",
                "# Your Code Here ❌\n",
                "num = 9\n",
                "if num > 0 and num % 3 == 0:\n",
                "    print(\"The number is positive and divisible by 3.\")\n",
                "else:\n",
                "    print(\"The number is either not positive or not divisible by 3.\")\n"
            ]
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "#### 🐣 Nesting Conditional Statements\n",
                "\n",
                "Nesting conditional statements means including one if statement inside another if statement. This allows for more complex decision making.\n",
                "\n",
                "Consider the following example:\n",
                "\n",
                "```python\n",
                "num = int(input(\"Enter a number: \"))\n",
                "\n",
                "if num >= 0:\n",
                "    if num == 0:\n",
                "        print(\"The number is zero.\")\n",
                "    else:\n",
                "        print(\"The number is positive.\")\n",
                "else:\n",
                "    print(\"The number is negative.\")\n",
                "```\n",
                "\n",
                "In this example, the program asks the user to enter a number. If the number is greater than or equal to 0, it further checks if the number is exactly 0. If it is, the program prints \"The number is zero.\" Otherwise, it prints \"The number is positive.\" If the initial condition is not satisfied (i.e., the number is negative), the program prints \"The number is negative.\"\n",
                "\n",
                "#### 🧑🏽‍💻 You do\n",
                "**Check if a year is a leap year**\n",
                "\n",
                "1. Create a variable named `year` and assign a year (integer) to it.\n",
                "2. Use an if statement to check if the year is evenly divisible by 4.\n",
                "3. If the condition is True, nest another if statement inside it to check if the year is evenly divisible by 100.\n",
                "4. If the year is evenly divisible by 100, further check if it is evenly divisible by 400.\n",
                "5. If the year is evenly divisible by 400, print \"It is a leap year.\"\n",
                "6. If the year is not evenly divisible by 400, print \"It is not a leap year.\"\n",
                "7. If the year is not evenly divisible by 100, print \"It is a leap year.\"\n",
                "8. If the year is not evenly divisible by 4, print \"It is not a leap year.\"\n",
                "\n",
                "# Your Code Here ❌\n",
                "year = 2024\n",
                "if year % 4 == 0:\n",
                "    if year % 100 == 0:\n",
                "        if year % 400 == 0:\n",
                "            print(\"It is a leap year.\")\n",
                "        else:\n",
                "            print(\"It is not a leap year.\")\n",
                "    else:\n",
                "        print(\"It is a leap year.\")\n",
                "else:\n",
                "    print(\"It is not a leap year.\")\n"
            ]
        }
    ]
}
